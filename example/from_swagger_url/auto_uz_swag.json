{
  "swagger": "2.0",
  "info": {
    "title": "AvtoUz API",
    "description": "AutoUz backend",
    "version": "v1"
  },
  "host": "panel.avto.uz",
  "schemes": [
    "https",
    "http"
  ],
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "paths": {
    "/car-place/category/list/": {
      "get": {
        "operationId": "car-place_category_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "region",
            "in": "query",
            "description": "Comma-separated list of region IDs",
            "required": false,
            "type": "string",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarPlaceCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": []
    },
    "/car-place/list/": {
      "get": {
        "operationId": "car-place_list_list",
        "description": "",
        "parameters": [
          {
            "name": "region__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "category__id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarPlaceList"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": []
    },
    "/car-place/map/": {
      "get": {
        "operationId": "car-place_map_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "lon",
            "in": "query",
            "description": "Longitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "rad",
            "in": "query",
            "description": "Radius (kilometers)",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarPlace"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": []
    },
    "/car-place/{slug}/": {
      "get": {
        "operationId": "car-place_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarPlace"
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$"
        }
      ]
    },
    "/car-place/{slug}/product/category/list/": {
      "get": {
        "operationId": "car-place_product_category_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProductCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car-place/{slug}/product/list/": {
      "get": {
        "operationId": "car-place_product_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car-place/{slug}/{category_id}/list/": {
      "get": {
        "operationId": "car-place_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "category_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/announcement-counter/": {
      "get": {
        "operationId": "car_announcement-counter_list",
        "description": "",
        "parameters": [
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "moderation_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_rent_with_purchase",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "price_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnouncementFilterCounter"
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/call/": {
      "post": {
        "operationId": "car_announcement_call_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCall"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCall"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/compare/": {
      "get": {
        "operationId": "car_announcement_compare_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "announcements",
            "in": "query",
            "type": "str"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnouncementCompare"
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/create/": {
      "post": {
        "operationId": "car_announcement_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/deal-of-day/": {
      "get": {
        "operationId": "car_announcement_deal-of-day_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementOfDay"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/list/": {
      "get": {
        "operationId": "car_announcement_list_list",
        "description": "",
        "parameters": [
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "moderation_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_rent_with_purchase",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "price_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "currency",
            "in": "query",
            "type": "str"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/owner-detail/": {
      "post": {
        "operationId": "car_announcement_owner-detail_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementOwnerDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementOwnerDetail"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/owner/{id}/": {
      "get": {
        "operationId": "car_announcement_owner_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcement/photo-instruction/": {
      "get": {
        "operationId": "car_announcement_photo-instruction_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnnouncementAddingPhotoInstructions"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/sms-verification/entrypoint/": {
      "post": {
        "operationId": "car_announcement_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForAnnouncement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForAnnouncement"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/sms-verification/verify": {
      "post": {
        "operationId": "car_announcement_sms-verification_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyCodeForAnnouncement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerifyCodeForAnnouncement"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/verify-owner/create/": {
      "post": {
        "operationId": "car_announcement_verify-owner_create_create",
        "description": "",
        "parameters": [
          {
            "name": "announcement",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "technical_passport_front",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "technical_passport_back",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "driver_license_front",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "driver_license_back",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "additional_info",
            "in": "formData",
            "required": false,
            "type": "string",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementVerifyOwnerCreate"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/verify-owner/{id}/delete/": {
      "delete": {
        "operationId": "car_announcement_verify-owner_delete_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Подтверждение владельца.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcement/{id}/detail/": {
      "get": {
        "operationId": "car_announcement_detail_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementDetail"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcement/{id}/sold/": {
      "post": {
        "operationId": "car_announcement_sold_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/announcement/{id}/update/": {
      "put": {
        "operationId": "car_announcement_update_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "patch": {
        "operationId": "car_announcement_update_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcements-min-max-price-year/": {
      "get": {
        "operationId": "car_announcements-min-max-price-year_list",
        "description": "",
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "type": "str"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/body-types/": {
      "get": {
        "operationId": "car_body-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BodyType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/comparison/": {
      "get": {
        "operationId": "car_comparison_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserComparisonCreateList"
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "post": {
        "operationId": "car_comparison_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserComparisonCreateList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserComparisonCreateList"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/comparison/{announcement_id}/delete-announcement/": {
      "delete": {
        "operationId": "car_comparison_delete-announcement_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "announcement_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/drive-types/": {
      "get": {
        "operationId": "car_drive-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DriveType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/equipments/list/": {
      "get": {
        "operationId": "car_equipments_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Equipment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/equipments/options/list/": {
      "get": {
        "operationId": "car_equipments_options_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OptionListByCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/equipments/options/{equipment_id}/": {
      "get": {
        "operationId": "car_equipments_options_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EquipmentOption"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "equipment_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/equipments/{model_id}/": {
      "get": {
        "operationId": "car_equipments_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Equipment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "model_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/gas-equipments/": {
      "get": {
        "operationId": "car_gas-equipments_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GasEquipment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/gearbox-types/": {
      "get": {
        "operationId": "car_gearbox-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GearboxType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/makes/": {
      "get": {
        "operationId": "car_makes_list",
        "description": "",
        "parameters": [
          {
            "name": "is_popular",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Make"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/makes/top/": {
      "get": {
        "operationId": "car_makes_top_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Make"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/min-car-price/": {
      "post": {
        "operationId": "car_min-car-price_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementMinCarPrice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementMinCarPrice"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/my-announcements/": {
      "get": {
        "operationId": "car_my-announcements_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MyAnnouncement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/price-statistics/": {
      "get": {
        "operationId": "car_price-statistics_list",
        "description": "",
        "parameters": [
          {
            "name": "generation",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/top-announcements/": {
      "get": {
        "operationId": "car_top-announcements_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/{genaration_id}/{body_type_id}/engine_type/": {
      "get": {
        "operationId": "car_engine_type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EngineType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "genaration_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/body-types/": {
      "get": {
        "operationId": "car_body-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BodyType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/{body_type_id}/{engine_type_id}/drive_type/": {
      "get": {
        "operationId": "car_drive_type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DriveType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "engine_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/{body_type_id}/{engine_type_id}/{drive_type_id}/gearbox_type/": {
      "get": {
        "operationId": "car_gearbox_type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GearboxType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "drive_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "engine_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/{body_type_id}/{engine_type_id}/{drive_type_id}/{gearbox_type_id}/modification-type/": {
      "get": {
        "operationId": "car_modification-type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ModificationType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "drive_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "engine_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "gearbox_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{make_id}/models/": {
      "get": {
        "operationId": "car_models_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Model"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "make_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{model_id}/years/": {
      "get": {
        "operationId": "car_years_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "model_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{model_id}/{year}generations/": {
      "get": {
        "operationId": "car_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Generation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "model_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "year",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/common/colors/": {
      "get": {
        "operationId": "common_colors_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Color"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/districts/{region_id}": {
      "get": {
        "operationId": "common_districts_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DistrictRegion"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": [
        {
          "name": "region_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/common/map/screenshot": {
      "post": {
        "operationId": "common_map_screenshot_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapScreenshot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MapScreenshot"
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/regions/": {
      "get": {
        "operationId": "common_regions_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Region"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/static-pages/": {
      "get": {
        "operationId": "common_static-pages_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StaticPage"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/static-pages/{slug}/": {
      "get": {
        "operationId": "common_static-pages_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StaticPage"
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/common/used-social-auths/": {
      "get": {
        "operationId": "common_used-social-auths_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProjectSocialAuths"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_list",
        "description": "",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field from to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_multi_match",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/functional_suggest/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_functional_suggest",
        "summary": "Functional suggest functionality.",
        "description": ":param request:\n:return:",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field from to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_multi_match",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/suggest/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_suggest",
        "description": "Suggest functionality.",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field from to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_multi_match",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/{id}/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/es/suggest/": {
      "get": {
        "operationId": "es_suggest_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnouncementSuggestTypesense"
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/payment/create-announcement-order/": {
      "post": {
        "operationId": "payment_create-announcement-order_create",
        "description": "",
        "parameters": [
          {
            "name": "announcement",
            "in": "formData",
            "required": false,
            "type": "integer",
            "x-nullable": true
          },
          {
            "name": "provider",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "payme"
            ]
          },
          {
            "name": "redirect_url",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "tariff_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "seven_days",
              "fifteen_days",
              "thirty_days",
              "top_three_days",
              "top_seven_days",
              "top_ten_days",
              "vip_three_days",
              "vip_seven_days",
              "vip_ten_days",
              "hot"
            ]
          },
          {
            "name": "reels_file",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAnnouncementOrder"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "payment"
        ]
      },
      "parameters": []
    },
    "/payment/last-transaction-status/{order_id}": {
      "get": {
        "operationId": "payment_last-transaction-status_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetLastTransactionStatus"
            }
          }
        },
        "tags": [
          "payment"
        ]
      },
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/payment/payme-call-back/": {
      "post": {
        "operationId": "payment_payme-call-back_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payme"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Payme"
            }
          }
        },
        "tags": [
          "payment"
        ]
      },
      "parameters": []
    },
    "/payment/tariff/": {
      "get": {
        "operationId": "payment_tariff_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tariff"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "payment"
        ]
      },
      "parameters": []
    },
    "/reels/": {
      "get": {
        "operationId": "reels_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListReels"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/like/": {
      "post": {
        "operationId": "reels_like_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LikeReels"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LikeReels"
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/offer-of-the-day/": {
      "get": {
        "operationId": "reels_offer-of-the-day_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListReels"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/share/": {
      "post": {
        "operationId": "reels_share_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareReels"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShareReels"
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/{id}/": {
      "get": {
        "operationId": "reels_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailReels"
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Рельс.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/rent/additional-service/": {
      "get": {
        "operationId": "rent_additional-service_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdditionalService"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/list/": {
      "get": {
        "operationId": "rent_list_list",
        "description": "",
        "parameters": [
          {
            "name": "rent_car__type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__category",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__has_air_conditioner",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__has_baby_seat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__is_clean",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__is_full_fuel",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_car__body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__engine_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__color",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_car_year_start",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_car_year_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_price_start",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_price_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Rent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/main_page/{rent_car_type_id}/": {
      "get": {
        "operationId": "rent_main_page_read",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rent_car__has_air_conditioner",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car__has_baby_seat",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car__is_clean",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car__is_full_fuel",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "region__in",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__make",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__body_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__drive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__gearbox_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car_year_start",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car_year_end",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_price_start",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_price_end",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentCarMainPage"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": [
        {
          "name": "rent_car_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/rent/order/": {
      "post": {
        "operationId": "rent_order_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RentOrderPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RentOrderPost"
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/order/list": {
      "get": {
        "operationId": "rent_order_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentOrderGet"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/type/": {
      "get": {
        "operationId": "rent_type_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentCarType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/type/{id}/categories/": {
      "get": {
        "operationId": "rent_type_categories_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentCarCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Категория автомобиля.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/rent/{id}/": {
      "get": {
        "operationId": "rent_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rent"
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Аренда.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/review/comments/{id}/": {
      "put": {
        "operationId": "review_comments_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "patch": {
        "operationId": "review_comments_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "delete": {
        "operationId": "review_comments_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Комментарий.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/review/create/": {
      "post": {
        "operationId": "review_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": []
    },
    "/review/list/": {
      "get": {
        "operationId": "review_list_list",
        "description": "",
        "parameters": [
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarReview"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": []
    },
    "/review/my-reviews/": {
      "get": {
        "operationId": "review_my-reviews_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarReview"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": []
    },
    "/review/{id}/": {
      "put": {
        "operationId": "review_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "patch": {
        "operationId": "review_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "delete": {
        "operationId": "review_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Отзыв.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/review/{id}/comments/": {
      "get": {
        "operationId": "review_comments_list",
        "description": "",
        "parameters": [
          {
            "name": "reply_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarReviewComment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/review/{id}/comments/create/": {
      "post": {
        "operationId": "review_comments_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/review/{id}/detail/": {
      "get": {
        "operationId": "review_detail_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReview"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Отзыв.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/stories/": {
      "get": {
        "operationId": "stories_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Category"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "stories"
        ]
      },
      "parameters": []
    },
    "/stories/item/{id}/read/": {
      "get": {
        "operationId": "stories_item_read_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stories"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this История.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/change-password/": {
      "post": {
        "operationId": "users_change-password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change-phone/": {
      "post": {
        "operationId": "users_change-phone_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserChangePhone"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserChangePhone"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change-phone/sms-verification/entrypoint/": {
      "post": {
        "operationId": "users_change-phone_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForChangePhone"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForChangePhone"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/dealers-map/": {
      "get": {
        "operationId": "users_dealers-map_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "lon",
            "in": "query",
            "description": "Longitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "rad",
            "in": "query",
            "description": "Radius (kilometers)",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Dealer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/dealers/": {
      "get": {
        "operationId": "users_dealers_list",
        "description": "",
        "parameters": [
          {
            "name": "car_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mark",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Dealer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/dealers/watch-contact/{id}/": {
      "post": {
        "operationId": "users_dealers_watch-contact_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/dealers/{dealer}/mark/{mark}/cars/": {
      "get": {
        "operationId": "users_dealers_mark_cars_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerCars"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "dealer",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "mark",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/dealers/{slug}/": {
      "get": {
        "operationId": "users_dealers_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dealer"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$"
        }
      ]
    },
    "/users/dealers/{slug}/cars/": {
      "get": {
        "operationId": "users_dealers_cars_list",
        "description": "",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerCars"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/dealers/{slug}/marks/": {
      "get": {
        "operationId": "users_dealers_marks_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerMarks"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/detail-with-counts/": {
      "get": {
        "operationId": "users_detail-with-counts_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetailWithCounts"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/detail/": {
      "get": {
        "operationId": "users_detail_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/detail/edit/": {
      "put": {
        "operationId": "users_detail_edit_update",
        "description": "",
        "parameters": [
          {
            "name": "full_name",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "image",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "integer",
            "x-nullable": true
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetailEdit"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_detail_edit_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "full_name",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "image",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "integer",
            "x-nullable": true
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetailEdit"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/filter-history/create/": {
      "post": {
        "operationId": "users_filter-history_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFilterHistoryCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserFilterHistoryCreate"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/filter-history/delete/": {
      "delete": {
        "operationId": "users_filter-history_delete_delete",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFilterHistoryDelete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/filter-history/list/": {
      "get": {
        "operationId": "users_filter-history_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserFilterHistoryList"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/forget-pass/change-password/": {
      "post": {
        "operationId": "users_forget-pass_change-password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeForgetPass"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeForgetPass"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/forget-pass/sms-verification/entrypoint/": {
      "post": {
        "operationId": "users_forget-pass_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/forget-pass/sms-verification/verify/": {
      "post": {
        "operationId": "users_forget-pass_sms-verification_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationForgetPass"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerificationForgetPass"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/login/": {
      "post": {
        "operationId": "users_login_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/notification/list/": {
      "get": {
        "operationId": "users_notification_list_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserNotification"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/notification/read-all/": {
      "post": {
        "operationId": "users_notification_read-all_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/notification/{id}/": {
      "get": {
        "operationId": "users_notification_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserNotification"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Получатель уведомления.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/popular-searches/": {
      "get": {
        "operationId": "users_popular-searches_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PopularSearch"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/profile/short/": {
      "get": {
        "operationId": "users_profile_short_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserShortInfo"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/refresh/token/": {
      "post": {
        "operationId": "users_refresh_token_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/registration/": {
      "post": {
        "operationId": "users_registration_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/registration/sms-verification/entrypoint/": {
      "post": {
        "operationId": "users_registration_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/registration/sms-verification/verify/": {
      "post": {
        "operationId": "users_registration_sms-verification_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationRegistrationCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerificationRegistrationCode"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/searches/": {
      "get": {
        "operationId": "users_searches_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserSearch"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/social-auth/login/apple/": {
      "post": {
        "operationId": "users_social-auth_login_apple_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/social-auth/login/facebook/": {
      "post": {
        "operationId": "users_social-auth_login_facebook_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/social-auth/login/google/": {
      "post": {
        "operationId": "users_social-auth_login_google_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/wishlist/announcement/add/": {
      "post": {
        "operationId": "users_wishlist_announcement_add_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/wishlist/announcement/list/": {
      "get": {
        "operationId": "users_wishlist_announcement_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserProfileWishlist"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/wishlist/announcement/remove/": {
      "post": {
        "operationId": "users_wishlist_announcement_remove_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/{id}/cars/": {
      "get": {
        "operationId": "users_cars_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerCars"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    }
  },
  "definitions": {
    "CarPlaceCategory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "car_place_count": {
          "title": "Car place count",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CarPlaceMiniCategory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        }
      }
    },
    "CarPlaceWorkingDays": {
      "required": [
        "day_of_week"
      ],
      "type": "object",
      "properties": {
        "day_of_week": {
          "title": "День недели",
          "type": "string",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ]
        }
      }
    },
    "CarPlaceList": {
      "required": [
        "name",
        "category",
        "region",
        "working_days"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 255,
          "x-nullable": true
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarPlaceMiniCategory"
          }
        },
        "address": {
          "title": "Address",
          "type": "string",
          "maxLength": 256,
          "x-nullable": true
        },
        "region": {
          "title": "Region",
          "type": "string",
          "minLength": 1
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "working_days": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarPlaceWorkingDays"
          }
        },
        "is_working_all_days": {
          "title": "Is working all days",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CarPlace": {
      "required": [
        "name",
        "phone",
        "category",
        "region",
        "working_days"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "phone": {
          "title": "Телефон",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "maxLength": 32,
          "minLength": 1
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarPlaceMiniCategory"
          }
        },
        "contact_from": {
          "title": "Время открытия",
          "type": "string",
          "x-nullable": true
        },
        "contact_to": {
          "title": "Время закрытия",
          "type": "string",
          "x-nullable": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "address": {
          "title": "Address",
          "type": "string",
          "maxLength": 256,
          "x-nullable": true
        },
        "region": {
          "title": "Region",
          "type": "string",
          "minLength": 1
        },
        "gallery": {
          "title": "Gallery",
          "type": "string",
          "readOnly": true
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 255,
          "x-nullable": true
        },
        "working_days": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarPlaceWorkingDays"
          }
        },
        "is_working_all_days": {
          "title": "Is working all days",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProductCategory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "products_count": {
          "title": "Products count",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Product": {
      "required": [
        "name",
        "car_place",
        "category"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "car_place": {
          "title": "Справочник",
          "type": "integer"
        },
        "category": {
          "$ref": "#/definitions/ProductCategory"
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "image": {
          "title": "Kартина",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "is_agreed_price": {
          "title": "Договорная цена",
          "type": "boolean"
        },
        "is_popular": {
          "title": "Популярный",
          "type": "boolean"
        }
      }
    },
    "AnnouncementFilterCounter": {
      "required": [
        "count"
      ],
      "type": "object",
      "properties": {
        "count": {
          "title": "Count",
          "type": "integer"
        }
      }
    },
    "AnnouncementCall": {
      "required": [
        "announcement"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "announcement": {
          "title": "Объявление",
          "type": "integer"
        },
        "user": {
          "title": "Пользователь",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Color": {
      "required": [
        "name",
        "hex_code"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "hex_code": {
          "title": "Шестнадцатеричный код",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {}
    },
    "AnnouncementCompare": {
      "required": [
        "licence_type",
        "ownership",
        "price",
        "make",
        "model",
        "drive_type",
        "gearbox_type",
        "color",
        "gallery"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "licence_type": {
          "title": "Тип лицензии",
          "type": "string",
          "enum": [
            "original",
            "duplicate"
          ]
        },
        "ownership": {
          "title": "Владение",
          "type": "string",
          "enum": [
            "first",
            "second",
            "third",
            "other"
          ]
        },
        "is_registered_locally": {
          "title": "Не растаможен",
          "type": "boolean"
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "make": {
          "title": "Make",
          "type": "string",
          "minLength": 1
        },
        "model": {
          "title": "Model",
          "type": "string",
          "minLength": 1
        },
        "generation": {
          "title": "Generation",
          "type": "string",
          "readOnly": true
        },
        "body_type": {
          "title": "Body type",
          "type": "string",
          "readOnly": true
        },
        "drive_type": {
          "title": "Drive type",
          "type": "string",
          "minLength": 1
        },
        "engine_type": {
          "title": "Engine type",
          "type": "string",
          "readOnly": true
        },
        "gearbox_type": {
          "title": "Gearbox type",
          "type": "string",
          "minLength": 1
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "power": {
          "title": "Power",
          "type": "string",
          "readOnly": true
        },
        "volume": {
          "title": "Volume",
          "type": "string",
          "readOnly": true
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "user": {
          "title": "User",
          "type": "string",
          "readOnly": true
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CarDamagedPart": {
      "required": [
        "part"
      ],
      "type": "object",
      "properties": {
        "part": {
          "title": "Часть автомобиля",
          "type": "string",
          "enum": [
            "rigth_front_door",
            "right_rear_door",
            "left_front_door",
            "left_rear_door",
            "front_bumper",
            "rear_bumper",
            "front_left_fender",
            "front_right_fender",
            "rear_left_fender",
            "rear_right_fender",
            "roof",
            "hood",
            "trunk"
          ]
        },
        "damage_type": {
          "title": "Тип повреждения",
          "type": "string",
          "enum": [
            "ideal",
            "with_dents",
            "scratched",
            "replaced",
            "requires_replacement"
          ]
        }
      }
    },
    "RentWithPurchase": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "prepayment": {
          "title": "Предоплата",
          "type": "string",
          "format": "decimal"
        },
        "rental_period": {
          "title": "Срок аренды",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "monthly_payment": {
          "title": "Ежемесячный платеж",
          "type": "string",
          "format": "decimal"
        }
      },
      "default": {}
    },
    "AnnouncementCreate": {
      "required": [
        "make",
        "model",
        "licence_type",
        "ownership",
        "purchase_date",
        "contact_name",
        "contact_phone",
        "region",
        "district",
        "price",
        "registration_vin",
        "registration_plate",
        "registration_certificate",
        "registration_serial_number",
        "registered_in_uzbekistan",
        "gallery",
        "damaged_parts"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "make": {
          "title": "Марка",
          "type": "integer"
        },
        "model": {
          "title": "Модель",
          "type": "integer"
        },
        "generation": {
          "title": "Поколение",
          "type": "integer",
          "x-nullable": true
        },
        "body_type": {
          "title": "Тип кузова",
          "type": "integer",
          "x-nullable": true
        },
        "drive_type": {
          "title": "Тип привода",
          "type": "integer",
          "x-nullable": true
        },
        "engine_type": {
          "title": "Тип двигателя",
          "type": "integer",
          "x-nullable": true
        },
        "gearbox_type": {
          "title": "Тип КПП",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "modification_type": {
          "title": "Тип модификации",
          "type": "integer",
          "x-nullable": true
        },
        "color": {
          "title": "Цвет",
          "type": "integer",
          "x-nullable": true
        },
        "licence_type": {
          "title": "Тип лицензии",
          "type": "string",
          "enum": [
            "original",
            "duplicate"
          ]
        },
        "ownership": {
          "title": "Владение",
          "type": "string",
          "enum": [
            "first",
            "second",
            "third",
            "other"
          ]
        },
        "purchase_date": {
          "title": "Дата покупки",
          "type": "string",
          "format": "date"
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "is_registered_locally": {
          "title": "Не растаможен",
          "type": "boolean"
        },
        "contact_name": {
          "title": "Контактное лицо",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_email": {
          "title": "Контактный email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "contact_phone": {
          "title": "Контактный телефон",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        },
        "region": {
          "title": "Region",
          "type": "integer"
        },
        "district": {
          "title": "District",
          "type": "integer"
        },
        "location_url": {
          "title": "Ссылка на карте",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "distance_traveled": {
          "title": "Пробег",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "mileage_image": {
          "title": "Пробег",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "registration_vin": {
          "title": "VIN",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_plate": {
          "title": "Гос.номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_certificate": {
          "title": "Свидетельство о регистрации",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_serial_number": {
          "title": "Серийный номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registered_in_uzbekistan": {
          "title": "Регистрирован в узбекистане",
          "type": "boolean"
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "gallery": {
          "type": "array",
          "items": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        },
        "gallery_360": {
          "type": "array",
          "items": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        },
        "damaged_parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarDamagedPart"
          }
        },
        "is_rent_with_purchase": {
          "title": "Аренда с выкупом",
          "type": "boolean"
        },
        "rent_with_purchase": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RentWithPurchase"
          },
          "default": []
        },
        "equipment": {
          "title": "Комплектация",
          "type": "integer",
          "x-nullable": true
        },
        "options": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "default": []
        },
        "option_items": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "default": []
        },
        "gas_equipment": {
          "title": "Газобаллонное оборудование",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "Generation": {
      "required": [
        "name",
        "year_begin",
        "year_end"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "year_begin": {
          "title": "Год начала",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "year_end": {
          "title": "Год окончания",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "logo": {
          "title": "Логотип",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "Region": {
      "required": [
        "title",
        "soato"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "soato": {
          "title": "Соато",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "District": {
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "DealerMini": {
      "required": [
        "name",
        "slug",
        "phone_number",
        "district"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 255,
          "minLength": 1
        },
        "avatar": {
          "title": "Аватар",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "phone_number": {
          "title": "Телефон",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "maxLength": 255,
          "minLength": 1
        },
        "contact_from": {
          "title": "Время открытия",
          "type": "string",
          "x-nullable": true
        },
        "contact_to": {
          "title": "Время закрытия",
          "type": "string",
          "x-nullable": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "district": {
          "$ref": "#/definitions/District"
        },
        "car_count": {
          "title": "Количество автомобилей",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        }
      }
    },
    "GasEquipment": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "Announcement": {
      "required": [
        "make",
        "model",
        "generation",
        "gallery",
        "gallery_360",
        "region",
        "price",
        "discount",
        "dealer",
        "user_type",
        "district",
        "rent_with_purchase",
        "options",
        "gas_equipment"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "make": {
          "title": "Make",
          "type": "string",
          "minLength": 1
        },
        "model": {
          "title": "Model",
          "type": "string",
          "minLength": 1
        },
        "generation": {
          "$ref": "#/definitions/Generation"
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "gallery_360": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "views_count": {
          "title": "Количество просмотров",
          "type": "integer",
          "readOnly": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "user": {
          "title": "User",
          "type": "string",
          "readOnly": true
        },
        "price": {
          "title": "Price",
          "type": "number"
        },
        "is_comparison": {
          "title": "Is comparison",
          "type": "string",
          "readOnly": true
        },
        "discount": {
          "title": "Discount",
          "type": "number"
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "dealer": {
          "$ref": "#/definitions/DealerMini"
        },
        "user_type": {
          "title": "Тип пользователя",
          "type": "string",
          "enum": [
            "owner",
            "dealer"
          ]
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "published_at": {
          "title": "Опубликовано",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "created_at": {
          "title": "Дата создания",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "expired_at": {
          "title": "Истекает",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "district": {
          "$ref": "#/definitions/District"
        },
        "is_rent_with_purchase": {
          "title": "Аренда с выкупом",
          "type": "boolean"
        },
        "rent_with_purchase": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RentWithPurchase"
          }
        },
        "equipment": {
          "title": "Комплектация",
          "type": "integer",
          "x-nullable": true
        },
        "options": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "gas_equipment": {
          "$ref": "#/definitions/GasEquipment"
        },
        "is_wishlisted": {
          "title": "Is wishlisted",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AnnouncementOfDay": {
      "required": [
        "announcement"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "announcement": {
          "$ref": "#/definitions/Announcement"
        }
      }
    },
    "AnnouncementOwnerDetail": {
      "required": [
        "user",
        "announcement"
      ],
      "type": "object",
      "properties": {
        "user": {
          "title": "User",
          "type": "integer"
        },
        "announcement": {
          "title": "Announcement",
          "type": "integer"
        }
      }
    },
    "AnnouncementAddingPhotoInstructions": {
      "required": [
        "order",
        "description"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "order": {
          "title": "Порядок",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "minLength": 1
        },
        "image": {
          "title": "Изображение",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        }
      }
    },
    "SendVerificationCodeForAnnouncement": {
      "required": [
        "phone_number"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        }
      }
    },
    "VerifyCodeForAnnouncement": {
      "required": [
        "phone_number",
        "code",
        "session"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "AnnouncementVerifyOwnerCreate": {
      "required": [
        "announcement"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "announcement": {
          "title": "Объявление",
          "type": "integer"
        },
        "technical_passport_front": {
          "title": "Техпаспорт (лицевая сторона)",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "technical_passport_back": {
          "title": "Техпаспорт (обратная сторона)",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "driver_license_front": {
          "title": "Водительское удостоверение (лицевая сторона)",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "driver_license_back": {
          "title": "Водительское удостоверение (обратная сторона)",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "additional_info": {
          "title": "Дополнительная информация",
          "type": "string",
          "x-nullable": true
        },
        "user": {
          "title": "Пользователь",
          "type": "integer",
          "readOnly": true,
          "x-nullable": true
        }
      }
    },
    "Make": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "minLength": 1
        },
        "logo": {
          "title": "Логотип",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "Model": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Имя",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "BodyType": {
      "required": [
        "type",
        "type_display"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Имя",
          "type": "string",
          "enum": [
            "sedan",
            "hatchback",
            "coupe",
            "suv",
            "van",
            "minivan",
            "cabriolet",
            "crossover",
            "pickup",
            "truck",
            "universal",
            "liftback",
            "mini_bus"
          ]
        },
        "logo": {
          "title": "Логотип",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "type_display": {
          "title": "Type display",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "DriveType": {
      "required": [
        "type",
        "type_display"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Имя",
          "type": "string",
          "enum": [
            "front",
            "back",
            "full"
          ]
        },
        "logo": {
          "title": "Логотип",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "type_display": {
          "title": "Type display",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "EngineType": {
      "required": [
        "type",
        "type_display"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Имя",
          "type": "string",
          "enum": [
            "petrol",
            "diesel",
            "electric",
            "hybrid",
            "other",
            "gas"
          ]
        },
        "logo": {
          "title": "Логотип",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "type_display": {
          "title": "Type display",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "GearboxType": {
      "required": [
        "type",
        "type_display"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Имя",
          "type": "string",
          "enum": [
            "manual",
            "automatic",
            "robot",
            "variator"
          ]
        },
        "logo": {
          "title": "Логотип",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "type_display": {
          "title": "Type display",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ModificationType": {
      "required": [
        "power",
        "volume"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "power": {
          "title": "Мощность",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "volume": {
          "title": "Объем",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "OptionCategory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "Option": {
      "required": [
        "name",
        "category",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "category": {
          "$ref": "#/definitions/OptionCategory"
        },
        "type": {
          "title": "Тип",
          "type": "string",
          "enum": [
            "select",
            "radio"
          ]
        }
      }
    },
    "OptionItem": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "EquipmentOption": {
      "required": [
        "option",
        "item"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "option": {
          "$ref": "#/definitions/Option"
        },
        "item": {
          "$ref": "#/definitions/OptionItem"
        }
      }
    },
    "Equipment": {
      "required": [
        "name",
        "options"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "model": {
          "title": "Модель",
          "type": "integer",
          "x-nullable": true
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentOption"
          }
        }
      }
    },
    "AnnouncementOption": {
      "required": [
        "option",
        "item"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "option": {
          "$ref": "#/definitions/Option"
        },
        "item": {
          "$ref": "#/definitions/OptionItem"
        }
      }
    },
    "AnnouncementDetail": {
      "required": [
        "make",
        "model",
        "price",
        "color",
        "generation",
        "body_type",
        "drive_type",
        "engine_type",
        "gearbox_type",
        "modification_type",
        "licence_type",
        "ownership",
        "purchase_date",
        "registration_vin",
        "registration_plate",
        "registration_certificate",
        "registration_serial_number",
        "registered_in_uzbekistan",
        "contact_name",
        "contact_phone",
        "gallery",
        "gallery_360",
        "damaged_parts",
        "user_type",
        "region",
        "district",
        "gas_equipment",
        "equipment",
        "options",
        "rent_with_purchase"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "$ref": "#/definitions/Model"
        },
        "absolute_car_name": {
          "title": "Абсолютное имя автомобиля",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "published_at": {
          "title": "Опубликовано",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "distance_traveled": {
          "title": "Пробег",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "color": {
          "$ref": "#/definitions/Color"
        },
        "generation": {
          "$ref": "#/definitions/Generation"
        },
        "body_type": {
          "$ref": "#/definitions/BodyType"
        },
        "drive_type": {
          "$ref": "#/definitions/DriveType"
        },
        "engine_type": {
          "$ref": "#/definitions/EngineType"
        },
        "gearbox_type": {
          "$ref": "#/definitions/GearboxType"
        },
        "modification_type": {
          "$ref": "#/definitions/ModificationType"
        },
        "licence_type": {
          "title": "Тип лицензии",
          "type": "string",
          "enum": [
            "original",
            "duplicate"
          ]
        },
        "ownership": {
          "title": "Владение",
          "type": "string",
          "enum": [
            "first",
            "second",
            "third",
            "other"
          ]
        },
        "purchase_date": {
          "title": "Дата покупки",
          "type": "string",
          "format": "date"
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "is_registered_locally": {
          "title": "Не растаможен",
          "type": "boolean"
        },
        "registration_vin": {
          "title": "VIN",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_plate": {
          "title": "Гос.номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_certificate": {
          "title": "Свидетельство о регистрации",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_serial_number": {
          "title": "Серийный номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registered_in_uzbekistan": {
          "title": "Регистрирован в узбекистане",
          "type": "boolean"
        },
        "user": {
          "title": "User",
          "type": "string",
          "readOnly": true
        },
        "contact_name": {
          "title": "Контактное лицо",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_email": {
          "title": "Контактный email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "contact_phone": {
          "title": "Контактный телефон",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "gallery_360": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "is_mine": {
          "title": "Is mine",
          "type": "string",
          "readOnly": true
        },
        "views_count": {
          "title": "Количество просмотров",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "_stats": {
          "title": "stats",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Дата создания",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Дата обновления",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "damaged_parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarDamagedPart"
          }
        },
        "user_type": {
          "title": "Тип пользователя",
          "type": "string",
          "enum": [
            "owner",
            "dealer"
          ]
        },
        "wishlist_count": {
          "title": "Wishlist count",
          "type": "string",
          "readOnly": true
        },
        "call_count": {
          "title": "Call count",
          "type": "string",
          "readOnly": true
        },
        "is_comparison": {
          "title": "Is comparison",
          "type": "string",
          "readOnly": true
        },
        "is_rent_with_purchase": {
          "title": "Аренда с выкупом",
          "type": "boolean"
        },
        "expired_at": {
          "title": "Истекает",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "is_expired": {
          "title": "Is expired",
          "type": "string",
          "readOnly": true
        },
        "price_analytics": {
          "title": "Price analytics",
          "type": "string",
          "readOnly": true
        },
        "today_viewed_count": {
          "title": "Today viewed count",
          "type": "string",
          "readOnly": true
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "district": {
          "$ref": "#/definitions/District"
        },
        "gas_equipment": {
          "$ref": "#/definitions/GasEquipment"
        },
        "equipment": {
          "$ref": "#/definitions/Equipment"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnouncementOption"
          }
        },
        "rent_with_purchase": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RentWithPurchase"
          }
        },
        "announcement_verify_owners": {
          "title": "Announcement verify owners",
          "type": "string",
          "readOnly": true
        },
        "is_face_to_face_check": {
          "title": "Личная проверка",
          "type": "boolean"
        },
        "mileage_image": {
          "title": "Пробег",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "is_wishlisted": {
          "title": "Is wishlisted",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserComparisonCreateList": {
      "required": [
        "announcement",
        "order"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "announcement": {
          "title": "Объявление",
          "type": "integer"
        },
        "order": {
          "title": "Порядок",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        }
      }
    },
    "OptionList": {
      "required": [
        "name",
        "category",
        "type",
        "items"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "category": {
          "$ref": "#/definitions/OptionCategory"
        },
        "type": {
          "title": "Тип",
          "type": "string",
          "enum": [
            "select",
            "radio"
          ]
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionItem"
          }
        }
      }
    },
    "OptionListByCategory": {
      "required": [
        "name",
        "options"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionList"
          }
        }
      }
    },
    "AnnouncementMinCarPrice": {
      "required": [
        "make",
        "model",
        "currency"
      ],
      "type": "object",
      "properties": {
        "make": {
          "title": "Make",
          "type": "integer"
        },
        "model": {
          "title": "Model",
          "type": "integer"
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        }
      }
    },
    "MyAnnouncement": {
      "required": [
        "make",
        "model",
        "generation",
        "body_type",
        "drive_type",
        "engine_type",
        "gearbox_type",
        "modification_type",
        "licence_type",
        "ownership",
        "purchase_date",
        "contact_name",
        "contact_phone",
        "region",
        "district",
        "price",
        "discount",
        "registration_vin",
        "registration_plate",
        "registration_certificate",
        "registration_serial_number",
        "registered_in_uzbekistan",
        "gallery",
        "gallery_360"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "moderation_status": {
          "title": "Статус модерации",
          "type": "string",
          "enum": [
            "active",
            "blocked",
            "in_moderation",
            "sold",
            "rejected"
          ]
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "$ref": "#/definitions/Model"
        },
        "generation": {
          "$ref": "#/definitions/Generation"
        },
        "body_type": {
          "$ref": "#/definitions/BodyType"
        },
        "drive_type": {
          "$ref": "#/definitions/DriveType"
        },
        "engine_type": {
          "$ref": "#/definitions/EngineType"
        },
        "gearbox_type": {
          "$ref": "#/definitions/GearboxType"
        },
        "modification_type": {
          "$ref": "#/definitions/ModificationType"
        },
        "absolute_car_name": {
          "title": "Абсолютное имя автомобиля",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "color": {
          "title": "Цвет",
          "type": "integer",
          "x-nullable": true
        },
        "licence_type": {
          "title": "Тип лицензии",
          "type": "string",
          "enum": [
            "original",
            "duplicate"
          ]
        },
        "ownership": {
          "title": "Владение",
          "type": "string",
          "enum": [
            "first",
            "second",
            "third",
            "other"
          ]
        },
        "purchase_date": {
          "title": "Дата покупки",
          "type": "string",
          "format": "date"
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "is_registered_locally": {
          "title": "Не растаможен",
          "type": "boolean"
        },
        "contact_name": {
          "title": "Контактное лицо",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_email": {
          "title": "Контактный email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "contact_phone": {
          "title": "Контактный телефон",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "district": {
          "$ref": "#/definitions/District"
        },
        "location_url": {
          "title": "Ссылка на карте",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "price": {
          "title": "Price",
          "type": "number"
        },
        "discount": {
          "title": "Discount",
          "type": "number"
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "distance_traveled": {
          "title": "Пробег",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "mileage_image": {
          "title": "Пробег",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "registration_vin": {
          "title": "VIN",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_plate": {
          "title": "Гос.номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_certificate": {
          "title": "Свидетельство о регистрации",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_serial_number": {
          "title": "Серийный номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registered_in_uzbekistan": {
          "title": "Регистрирован в узбекистане",
          "type": "boolean"
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "gallery_360": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "stats": {
          "title": "Stats",
          "type": "string",
          "readOnly": true
        },
        "published_at": {
          "title": "Опубликовано",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "expired_at": {
          "title": "Истекает",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "is_expired": {
          "title": "Is expired",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Year": {
      "required": [
        "model"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "model": {
          "title": "Модель",
          "type": "integer"
        },
        "years": {
          "type": "array",
          "items": {
            "title": "Years",
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648
          }
        }
      }
    },
    "DistrictRegion": {
      "required": [
        "title",
        "region"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "region": {
          "$ref": "#/definitions/Region"
        }
      }
    },
    "MapScreenshot": {
      "required": [
        "longitude",
        "latitude"
      ],
      "type": "object",
      "properties": {
        "longitude": {
          "title": "Longitude",
          "type": "string",
          "minLength": 1
        },
        "latitude": {
          "title": "Latitude",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "StaticPage": {
      "required": [
        "title",
        "slug",
        "link",
        "content"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "link": {
          "title": "Ссылка",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "content": {
          "title": "Контент",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UsedSocialAuth": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "ProjectSocialAuths": {
      "required": [
        "used_social_auth"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "used_social_auth": {
          "$ref": "#/definitions/UsedSocialAuth"
        },
        "is_available": {
          "title": "Доступно",
          "type": "boolean"
        }
      }
    },
    "/home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer": {
      "required": [
        "id",
        "make",
        "model",
        "generation",
        "body_type",
        "drive_type",
        "engine_type",
        "gearbox_type",
        "year",
        "modification_type",
        "region",
        "district",
        "user",
        "dealer",
        "licence_type",
        "ownership",
        "description",
        "is_registered_locally",
        "contact_name",
        "contact_email",
        "contact_phone",
        "longitude",
        "latitude",
        "distance_traveled",
        "registered_in_uzbekistan",
        "user_type",
        "is_new",
        "price",
        "currency",
        "published_at",
        "views_count",
        "discount",
        "contact_available_from",
        "contact_available_to",
        "is_rent_with_purchase"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "make": {
          "title": "Make",
          "type": "string"
        },
        "model": {
          "title": "Model",
          "type": "string"
        },
        "generation": {
          "title": "Generation",
          "type": "string"
        },
        "body_type": {
          "title": "Body type",
          "type": "string"
        },
        "drive_type": {
          "title": "Drive type",
          "type": "string"
        },
        "engine_type": {
          "title": "Engine type",
          "type": "string"
        },
        "gearbox_type": {
          "title": "Gearbox type",
          "type": "string"
        },
        "year": {
          "title": "Year",
          "type": "integer"
        },
        "modification_type": {
          "title": "Modification type",
          "type": "string"
        },
        "region": {
          "title": "Region",
          "type": "string"
        },
        "district": {
          "title": "District",
          "type": "string"
        },
        "user": {
          "title": "User",
          "type": "string"
        },
        "dealer": {
          "title": "Dealer",
          "type": "string"
        },
        "licence_type": {
          "title": "Licence type",
          "type": "string",
          "minLength": 1
        },
        "ownership": {
          "title": "Ownership",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "is_registered_locally": {
          "title": "Is registered locally",
          "type": "boolean"
        },
        "contact_name": {
          "title": "Contact name",
          "type": "string",
          "minLength": 1
        },
        "contact_email": {
          "title": "Contact email",
          "type": "string",
          "minLength": 1
        },
        "contact_phone": {
          "title": "Contact phone",
          "type": "string",
          "minLength": 1
        },
        "longitude": {
          "title": "Longitude",
          "type": "number"
        },
        "latitude": {
          "title": "Latitude",
          "type": "number"
        },
        "distance_traveled": {
          "title": "Distance traveled",
          "type": "integer"
        },
        "registered_in_uzbekistan": {
          "title": "Registered in uzbekistan",
          "type": "boolean"
        },
        "user_type": {
          "title": "User type",
          "type": "string",
          "minLength": 1
        },
        "is_new": {
          "title": "Is new",
          "type": "boolean"
        },
        "price": {
          "title": "Price",
          "type": "number"
        },
        "currency": {
          "title": "Currency",
          "type": "string",
          "minLength": 1
        },
        "gallery": {
          "title": "Gallery",
          "type": "string",
          "readOnly": true
        },
        "gallery_360": {
          "title": "Gallery 360",
          "type": "string",
          "readOnly": true
        },
        "published_at": {
          "title": "Published at",
          "type": "string",
          "minLength": 1
        },
        "views_count": {
          "title": "Views count",
          "type": "integer"
        },
        "is_comparison": {
          "title": "Is comparison",
          "type": "string",
          "readOnly": true
        },
        "discount": {
          "title": "Discount",
          "type": "number"
        },
        "contact_available_from": {
          "title": "Contact available from",
          "type": "string",
          "minLength": 1
        },
        "contact_available_to": {
          "title": "Contact available to",
          "type": "string",
          "minLength": 1
        },
        "is_rent_with_purchase": {
          "title": "Is rent with purchase",
          "type": "boolean"
        },
        "is_wishlisted": {
          "title": "Is wishlisted",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AnnouncementSuggestTypesense": {
      "required": [
        "results"
      ],
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "CreateAnnouncementOrder": {
      "required": [
        "provider",
        "tariff_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "announcement": {
          "title": "Announcement",
          "type": "integer",
          "x-nullable": true
        },
        "provider": {
          "title": "Provider",
          "type": "string",
          "enum": [
            "payme"
          ]
        },
        "redirect_url": {
          "title": "Redirect url",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "payment_url": {
          "title": "Payment url",
          "type": "string",
          "readOnly": true
        },
        "amount": {
          "title": "Amount",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "tariff_type": {
          "title": "Tariff Type",
          "type": "string",
          "enum": [
            "seven_days",
            "fifteen_days",
            "thirty_days",
            "top_three_days",
            "top_seven_days",
            "top_ten_days",
            "vip_three_days",
            "vip_seven_days",
            "vip_ten_days",
            "hot"
          ]
        },
        "reels_file": {
          "title": "Содержимое",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "GetLastTransactionStatus": {
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "waiting",
            "paid",
            "failed",
            "canceled"
          ]
        }
      }
    },
    "Payme": {
      "required": [
        "id",
        "method",
        "params"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "method": {
          "title": "Method",
          "type": "string",
          "enum": [
            "CheckPerformTransaction",
            "CreateTransaction",
            "PerformTransaction",
            "CheckTransaction",
            "CancelTransaction"
          ]
        },
        "params": {
          "title": "Params",
          "type": "object"
        }
      }
    },
    "Tariff": {
      "required": [
        "type",
        "amount"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "seven_days",
            "fifteen_days",
            "thirty_days",
            "top_three_days",
            "top_seven_days",
            "top_ten_days",
            "vip_three_days",
            "vip_seven_days",
            "vip_ten_days",
            "hot"
          ]
        },
        "amount": {
          "title": "Amount",
          "type": "string",
          "format": "decimal"
        },
        "type_int": {
          "title": "Type int",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DealerReels": {
      "required": [
        "name",
        "avatar",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "avatar": {
          "$ref": "#/definitions/Image"
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "UserReels": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "AnnouncementReels": {
      "required": [
        "price"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "discount": {
          "title": "Cкидка",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        }
      }
    },
    "ListReels": {
      "required": [
        "title",
        "dealer",
        "user",
        "announcement"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "content": {
          "title": "Содержимое",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "dealer": {
          "$ref": "#/definitions/DealerReels"
        },
        "user": {
          "$ref": "#/definitions/UserReels"
        },
        "like_count": {
          "title": "Количество лайков",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "share_count": {
          "title": "Количество шаров",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "announcement": {
          "$ref": "#/definitions/AnnouncementReels"
        },
        "is_liked": {
          "title": "Is liked",
          "type": "string",
          "readOnly": true
        },
        "is_offer_of_the_day": {
          "title": "Предложение дня",
          "type": "boolean"
        }
      }
    },
    "LikeReels": {
      "required": [
        "reel"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "reel": {
          "title": "Рельс",
          "type": "integer"
        }
      }
    },
    "ShareReels": {
      "required": [
        "reel"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "reel": {
          "title": "Рельс",
          "type": "integer"
        }
      }
    },
    "DetailReels": {
      "required": [
        "title",
        "dealer",
        "user",
        "announcement"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "content": {
          "title": "Содержимое",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "dealer": {
          "$ref": "#/definitions/DealerReels"
        },
        "user": {
          "$ref": "#/definitions/UserReels"
        },
        "like_count": {
          "title": "Количество лайков",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "share_count": {
          "title": "Количество шаров",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "announcement": {
          "$ref": "#/definitions/AnnouncementReels"
        }
      }
    },
    "AdditionalService": {
      "required": [
        "name",
        "price"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "RentCarType": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "RentCarCategory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "RentCar": {
      "required": [
        "type",
        "category",
        "make",
        "model",
        "generation",
        "body_type",
        "drive_type",
        "modification_type",
        "gearbox_type",
        "engine_type",
        "engine_volume",
        "color",
        "gallery"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/RentCarType"
        },
        "category": {
          "$ref": "#/definitions/RentCarCategory"
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "$ref": "#/definitions/Model"
        },
        "generation": {
          "$ref": "#/definitions/Generation"
        },
        "body_type": {
          "$ref": "#/definitions/BodyType"
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "drive_type": {
          "$ref": "#/definitions/DriveType"
        },
        "modification_type": {
          "$ref": "#/definitions/ModificationType"
        },
        "gearbox_type": {
          "$ref": "#/definitions/GearboxType"
        },
        "engine_type": {
          "$ref": "#/definitions/EngineType"
        },
        "engine_volume": {
          "title": "Объем двигателя",
          "type": "number"
        },
        "color": {
          "title": "Цвет",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "distance_traveled": {
          "title": "Пробег",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "has_air_conditioner": {
          "title": "Кондиционер",
          "type": "boolean"
        },
        "has_baby_seat": {
          "title": "Детское кресло",
          "type": "boolean"
        },
        "is_clean": {
          "title": "Чистая",
          "type": "boolean"
        },
        "is_full_fuel": {
          "title": "Полный бензин",
          "type": "boolean"
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Rent": {
      "required": [
        "rent_car",
        "region",
        "price"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "rent_car": {
          "$ref": "#/definitions/RentCar"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        },
        "min_age": {
          "title": "Минимальный возраст",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "min_driving_experience": {
          "title": "Минимальный опыт вождения",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        }
      }
    },
    "RentCarMainPage": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "rent_list": {
          "title": "Rent list",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RentOrderPost": {
      "required": [
        "rent",
        "user_name",
        "phone_number",
        "start_date",
        "end_date"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "rent": {
          "title": "Аренда",
          "type": "integer"
        },
        "user_name": {
          "title": "Имя пользователя",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "phone_number": {
          "title": "Номер телефона",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "start_date": {
          "title": "Дата начала",
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "title": "Дата окончания",
          "type": "string",
          "format": "date-time"
        },
        "start_longitude": {
          "title": "Долгота начала",
          "type": "number",
          "x-nullable": true
        },
        "start_latitude": {
          "title": "Широта начала",
          "type": "number",
          "x-nullable": true
        },
        "end_longitude": {
          "title": "Долгота окончания",
          "type": "number",
          "x-nullable": true
        },
        "end_latitude": {
          "title": "Широта окончания",
          "type": "number",
          "x-nullable": true
        },
        "additional_services": {
          "type": "array",
          "items": {
            "title": "Дополнительные услуги",
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "RentOrderGet": {
      "required": [
        "user",
        "rent",
        "user_name",
        "phone_number",
        "start_date",
        "end_date"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "title": "Пользователь",
          "type": "integer"
        },
        "rent": {
          "title": "Аренда",
          "type": "integer"
        },
        "user_name": {
          "title": "Имя пользователя",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "phone_number": {
          "title": "Номер телефона",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "start_date": {
          "title": "Дата начала",
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "title": "Дата окончания",
          "type": "string",
          "format": "date-time"
        },
        "start_longitude": {
          "title": "Долгота начала",
          "type": "number",
          "x-nullable": true
        },
        "start_latitude": {
          "title": "Широта начала",
          "type": "number",
          "x-nullable": true
        },
        "end_longitude": {
          "title": "Долгота окончания",
          "type": "number",
          "x-nullable": true
        },
        "end_latitude": {
          "title": "Широта окончания",
          "type": "number",
          "x-nullable": true
        },
        "additional_services": {
          "type": "array",
          "items": {
            "title": "Дополнительные услуги",
            "type": "integer"
          },
          "uniqueItems": true
        },
        "total_price": {
          "title": "Общая цена",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "is_active": {
          "title": "Активно",
          "type": "boolean"
        }
      }
    },
    "CarReviewCommentCreateUpdate": {
      "required": [
        "text"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "text": {
          "title": "Текст",
          "type": "string",
          "minLength": 1
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "CarReviewStarAnswerCreate": {
      "required": [
        "question",
        "star_count"
      ],
      "type": "object",
      "properties": {
        "question": {
          "title": "Вопрос",
          "type": "integer"
        },
        "star_count": {
          "title": "Star count",
          "type": "integer",
          "maximum": 5,
          "minimum": 0
        }
      }
    },
    "CarReviewCreateUpdate": {
      "required": [
        "title",
        "comment",
        "tenure",
        "star_answers",
        "make",
        "model"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "comment": {
          "title": "Комментарий",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "tenure": {
          "title": "Срок аренды",
          "type": "string",
          "minLength": 1
        },
        "positives": {
          "type": "array",
          "items": {
            "title": "Positives",
            "type": "string",
            "minLength": 1
          }
        },
        "negatives": {
          "type": "array",
          "items": {
            "title": "Negatives",
            "type": "string",
            "minLength": 1
          }
        },
        "avg_star": {
          "title": "Оценка",
          "type": "string",
          "format": "decimal",
          "readOnly": true,
          "x-nullable": true
        },
        "star_answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarReviewStarAnswerCreate"
          }
        },
        "make": {
          "title": "Марка",
          "type": "integer"
        },
        "model": {
          "title": "Модель",
          "type": "integer"
        },
        "generation": {
          "title": "Поколение",
          "type": "integer",
          "x-nullable": true
        },
        "body_type": {
          "title": "Тип кузова",
          "type": "integer",
          "x-nullable": true
        },
        "drive_type": {
          "title": "Тип привода",
          "type": "integer",
          "x-nullable": true
        },
        "engine_type": {
          "title": "Тип двигателя",
          "type": "integer",
          "x-nullable": true
        },
        "gearbox_type": {
          "title": "Тип КПП",
          "type": "integer",
          "x-nullable": true
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "modification_type": {
          "title": "Тип модификации",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "CarReviewQuestion": {
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Название",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "CarReviewStarAnswerDetail": {
      "required": [
        "question",
        "star_count"
      ],
      "type": "object",
      "properties": {
        "question": {
          "$ref": "#/definitions/CarReviewQuestion"
        },
        "star_count": {
          "title": "Star count",
          "type": "integer",
          "maximum": 5,
          "minimum": 0
        }
      }
    },
    "CarReview": {
      "required": [
        "make",
        "model",
        "generation",
        "body_type",
        "drive_type",
        "engine_type",
        "gearbox_type",
        "modification_type",
        "title",
        "comment",
        "tenure",
        "star_answers"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "$ref": "#/definitions/Model"
        },
        "generation": {
          "$ref": "#/definitions/Generation"
        },
        "body_type": {
          "$ref": "#/definitions/BodyType"
        },
        "drive_type": {
          "$ref": "#/definitions/DriveType"
        },
        "engine_type": {
          "$ref": "#/definitions/EngineType"
        },
        "gearbox_type": {
          "$ref": "#/definitions/GearboxType"
        },
        "modification_type": {
          "$ref": "#/definitions/ModificationType"
        },
        "absolute_car_name": {
          "title": "Абсолютное имя автомобиля",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "comment": {
          "title": "Комментарий",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "tenure": {
          "title": "Срок аренды",
          "type": "string",
          "minLength": 1
        },
        "positives": {
          "type": "array",
          "items": {
            "title": "Positives",
            "type": "string",
            "minLength": 1
          }
        },
        "negatives": {
          "type": "array",
          "items": {
            "title": "Negatives",
            "type": "string",
            "minLength": 1
          }
        },
        "avg_star": {
          "title": "Оценка",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "star_answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarReviewStarAnswerDetail"
          }
        },
        "status": {
          "title": "Статус",
          "type": "string",
          "enum": [
            "active",
            "blocked",
            "in_moderation"
          ]
        },
        "archived": {
          "title": "Архивный",
          "type": "boolean"
        },
        "is_mine": {
          "title": "Is mine",
          "type": "string",
          "readOnly": true
        },
        "views_count": {
          "title": "Количество просмотров",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "comments_count": {
          "title": "Comments count",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        }
      }
    },
    "CarReviewCommentUser": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "CarReviewComment": {
      "required": [
        "user",
        "text"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/CarReviewCommentUser"
        },
        "text": {
          "title": "Текст",
          "type": "string",
          "minLength": 1
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "edited": {
          "title": "Edited",
          "type": "boolean"
        }
      }
    },
    "ListStories": {
      "required": [
        "title"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "content": {
          "title": "Содержимое",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "icon": {
          "title": "Иконка",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "url": {
          "title": "Ссылка",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "expired": {
          "title": "Истекло",
          "type": "boolean"
        },
        "redirect_to": {
          "title": "Перенаправление",
          "type": "string",
          "enum": [
            "dealer",
            "announcement"
          ],
          "x-nullable": true
        },
        "redirect_data": {
          "title": "Данные перенаправления",
          "type": "object",
          "x-nullable": true
        },
        "is_read": {
          "title": "Is read",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Category": {
      "required": [
        "name",
        "is_read",
        "items"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true,
          "minLength": 1
        },
        "cover_image_thumbnail": {
          "title": "Cover image thumbnail",
          "type": "string",
          "readOnly": true
        },
        "is_read": {
          "title": "Is read",
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListStories"
          }
        }
      }
    },
    "ChangePassword": {
      "required": [
        "old_password",
        "new_password"
      ],
      "type": "object",
      "properties": {
        "old_password": {
          "title": "Old password",
          "type": "string",
          "minLength": 1
        },
        "new_password": {
          "title": "New password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserChangePhone": {
      "required": [
        "phone_number",
        "code",
        "session"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SendVerificationCodeForChangePhone": {
      "required": [
        "phone_number"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        }
      }
    },
    "DealerType": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "DealerWorkingDays": {
      "required": [
        "day_of_week"
      ],
      "type": "object",
      "properties": {
        "day_of_week": {
          "title": "День недели",
          "type": "string",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ]
        }
      }
    },
    "Dealer": {
      "required": [
        "name",
        "slug",
        "phone_number",
        "district",
        "dealer_type",
        "gallery",
        "working_days"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Название",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "slug": {
          "title": "Слаг",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "phone_number": {
          "title": "Телефон",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "maxLength": 255,
          "minLength": 1
        },
        "avatar": {
          "title": "Аватар",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "contact_from": {
          "title": "Время открытия",
          "type": "string",
          "x-nullable": true
        },
        "contact_to": {
          "title": "Время закрытия",
          "type": "string",
          "x-nullable": true
        },
        "location_url": {
          "title": "Ссылка на карте",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "district": {
          "$ref": "#/definitions/District"
        },
        "car_count": {
          "title": "Количество автомобилей",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "dealer_type": {
          "$ref": "#/definitions/DealerType"
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "address": {
          "title": "Адрес",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "is_working_all_days": {
          "title": "Is working all days",
          "type": "string",
          "readOnly": true
        },
        "working_days": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerWorkingDays"
          }
        }
      }
    },
    "UserMini": {
      "required": [
        "region"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "email": {
          "title": "Эл. адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "DealerCars": {
      "required": [
        "region",
        "gallery",
        "user",
        "dealer",
        "make",
        "model",
        "licence_type",
        "ownership",
        "purchase_date",
        "contact_name",
        "contact_phone",
        "registration_vin",
        "registration_plate",
        "registration_certificate",
        "registration_serial_number",
        "registered_in_uzbekistan",
        "user_type",
        "price"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "is_comparison": {
          "title": "Is comparison",
          "type": "string",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/UserMini"
        },
        "dealer": {
          "$ref": "#/definitions/Dealer"
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "$ref": "#/definitions/Model"
        },
        "views_count": {
          "title": "Количество просмотров",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "created_at": {
          "title": "Дата создания",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Дата обновления",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "moderation_status": {
          "title": "Статус модерации",
          "type": "string",
          "enum": [
            "active",
            "blocked",
            "in_moderation",
            "sold",
            "rejected"
          ]
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "absolute_car_name": {
          "title": "Абсолютное имя автомобиля",
          "type": "string",
          "maxLength": 512,
          "x-nullable": true
        },
        "licence_type": {
          "title": "Тип лицензии",
          "type": "string",
          "enum": [
            "original",
            "duplicate"
          ]
        },
        "ownership": {
          "title": "Владение",
          "type": "string",
          "enum": [
            "first",
            "second",
            "third",
            "other"
          ]
        },
        "purchase_date": {
          "title": "Дата покупки",
          "type": "string",
          "format": "date"
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "description_en": {
          "title": "Описание [en]",
          "type": "string",
          "x-nullable": true
        },
        "description_uz": {
          "title": "Описание [uz]",
          "type": "string",
          "x-nullable": true
        },
        "description_ru": {
          "title": "Описание [ru]",
          "type": "string",
          "x-nullable": true
        },
        "is_registered_locally": {
          "title": "Не растаможен",
          "type": "boolean"
        },
        "contact_name": {
          "title": "Контактное лицо",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_email": {
          "title": "Контактный email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "contact_phone": {
          "title": "Контактный телефон",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        },
        "location_url": {
          "title": "Ссылка на карте",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "x-nullable": true
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "distance_traveled": {
          "title": "Пробег",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "mileage_image": {
          "title": "Пробег",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "registration_vin": {
          "title": "VIN",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_plate": {
          "title": "Гос.номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_certificate": {
          "title": "Свидетельство о регистрации",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registration_serial_number": {
          "title": "Серийный номер",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "registered_in_uzbekistan": {
          "title": "Регистрирован в узбекистане",
          "type": "boolean"
        },
        "user_type": {
          "title": "Тип пользователя",
          "type": "string",
          "enum": [
            "owner",
            "dealer"
          ]
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "price": {
          "title": "Цена",
          "type": "string",
          "format": "decimal"
        },
        "discount": {
          "title": "Cкидка",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "published_at": {
          "title": "Опубликовано",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "contact_views_count": {
          "title": "Количество просмотров контакта",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "expired_at": {
          "title": "Истекает",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "top_expires_at": {
          "title": "Топ истекает",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "is_rent_with_purchase": {
          "title": "Аренда с выкупом",
          "type": "boolean"
        },
        "is_face_to_face_check": {
          "title": "Личная проверка",
          "type": "boolean"
        },
        "generation": {
          "title": "Поколение",
          "type": "integer",
          "x-nullable": true
        },
        "body_type": {
          "title": "Тип кузова",
          "type": "integer",
          "x-nullable": true
        },
        "drive_type": {
          "title": "Тип привода",
          "type": "integer",
          "x-nullable": true
        },
        "engine_type": {
          "title": "Тип двигателя",
          "type": "integer",
          "x-nullable": true
        },
        "gearbox_type": {
          "title": "Тип КПП",
          "type": "integer",
          "x-nullable": true
        },
        "modification_type": {
          "title": "Тип модификации",
          "type": "integer",
          "x-nullable": true
        },
        "equipment": {
          "title": "Комплектация",
          "type": "integer",
          "x-nullable": true
        },
        "gas_equipment": {
          "title": "Газобаллонное оборудование",
          "type": "integer",
          "x-nullable": true
        },
        "color": {
          "title": "Цвет",
          "type": "integer",
          "x-nullable": true
        },
        "district": {
          "title": "Район",
          "type": "integer",
          "x-nullable": true
        },
        "is_wishlisted": {
          "title": "Is wishlisted",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DealerMarks": {
      "required": [
        "make"
      ],
      "type": "object",
      "properties": {
        "make": {
          "$ref": "#/definitions/Make"
        },
        "cars_count": {
          "title": "Cars count",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserCountData": {
      "required": [
        "user"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "title": "Пользователь",
          "type": "integer"
        },
        "announcement_wishlist_count": {
          "title": "Announcement wishlist count",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "announcements_count": {
          "title": "Announcements count",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "search_count": {
          "title": "Search count",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "reviews_count": {
          "title": "Reviews count",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "filter_history_count": {
          "title": "Filter history count",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        }
      }
    },
    "UserDetailWithCounts": {
      "required": [
        "region",
        "usercountdata"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "readOnly": true
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "email": {
          "title": "Эл. адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "is_dealer": {
          "title": "Дилер",
          "type": "boolean"
        },
        "is_active": {
          "title": "Active",
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "type": "boolean"
        },
        "is_staff": {
          "title": "Staff status",
          "description": "Designates whether the user can log into this admin site.",
          "type": "boolean"
        },
        "is_superuser": {
          "title": "Superuser status",
          "description": "Designates that this user has all permissions without explicitly assigning them.",
          "type": "boolean"
        },
        "last_login": {
          "title": "Last login",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "date_joined": {
          "title": "Date joined",
          "type": "string",
          "format": "date-time"
        },
        "usercountdata": {
          "$ref": "#/definitions/UserCountData"
        },
        "is_read_all_notifications": {
          "title": "Is read all notifications",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserDetail": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "type": "string",
          "readOnly": true
        },
        "first_name": {
          "title": "First name",
          "type": "string",
          "maxLength": 150
        },
        "last_name": {
          "title": "Last name",
          "type": "string",
          "maxLength": 150
        },
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "email": {
          "title": "Эл. адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "region": {
          "title": "Регион",
          "type": "integer",
          "x-nullable": true
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "x-nullable": true
        },
        "is_dealer": {
          "title": "Дилер",
          "type": "boolean"
        },
        "is_active": {
          "title": "Active",
          "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
          "type": "boolean"
        },
        "is_staff": {
          "title": "Staff status",
          "description": "Designates whether the user can log into this admin site.",
          "type": "boolean"
        },
        "is_superuser": {
          "title": "Superuser status",
          "description": "Designates that this user has all permissions without explicitly assigning them.",
          "type": "boolean"
        },
        "last_login": {
          "title": "Last login",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "date_joined": {
          "title": "Date joined",
          "type": "string",
          "format": "date-time"
        },
        "is_read_all_notifications": {
          "title": "Is read all notifications",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserDetailEdit": {
      "type": "object",
      "properties": {
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "region": {
          "title": "Регион",
          "type": "integer",
          "x-nullable": true
        },
        "email": {
          "title": "Эл. адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        }
      }
    },
    "UserFilterHistoryCreate": {
      "required": [
        "make",
        "model",
        "query",
        "query_data"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "x-nullable": true
        },
        "make": {
          "title": "Марка",
          "type": "integer"
        },
        "model": {
          "type": "array",
          "items": {
            "title": "Модель",
            "type": "integer"
          },
          "uniqueItems": true
        },
        "query": {
          "title": "Запрос",
          "type": "string",
          "maxLength": 511,
          "minLength": 1
        },
        "query_data": {
          "title": "Данные запроса",
          "type": "object"
        }
      }
    },
    "UserFilterHistoryDelete": {
      "required": [
        "ids_list"
      ],
      "type": "object",
      "properties": {
        "ids_list": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "UserFilterHistoryList": {
      "required": [
        "user",
        "make",
        "model",
        "query",
        "query_data"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "title": "Пользователь",
          "type": "integer"
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        },
        "query": {
          "title": "Запрос",
          "type": "string",
          "maxLength": 511,
          "minLength": 1
        },
        "query_data": {
          "title": "Данные запроса",
          "type": "object"
        }
      }
    },
    "ChangeForgetPass": {
      "required": [
        "phone_number",
        "password"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SendVerificationCode": {
      "required": [
        "phone"
      ],
      "type": "object",
      "properties": {
        "phone": {
          "title": "Phone",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        }
      }
    },
    "VerificationForgetPass": {
      "required": [
        "phone",
        "code",
        "session"
      ],
      "type": "object",
      "properties": {
        "phone": {
          "title": "Phone",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TokenObtainPair": {
      "required": [
        "phone_number",
        "password"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "NotificationCategory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "Notification": {
      "required": [
        "category",
        "title",
        "content"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "category": {
          "$ref": "#/definitions/NotificationCategory"
        },
        "title": {
          "title": "Заголовок",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "cover": {
          "title": "Изображение обложки",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "content": {
          "title": "Content",
          "type": "string",
          "minLength": 1
        },
        "created_at": {
          "title": "Дата создания",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "read_count": {
          "title": "Число прочтений",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "to_all": {
          "title": "Отправить всем",
          "type": "boolean"
        }
      }
    },
    "UserNotification": {
      "required": [
        "notification"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "notification": {
          "$ref": "#/definitions/Notification"
        },
        "user": {
          "title": "Пользователь",
          "type": "integer",
          "x-nullable": true
        },
        "is_read": {
          "title": "Прочитано",
          "type": "boolean"
        }
      }
    },
    "PopularSearch": {
      "required": [
        "search_text"
      ],
      "type": "object",
      "properties": {
        "search_text": {
          "title": "Search text",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserShortInfo": {
      "type": "object",
      "properties": {
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TokenRefresh": {
      "required": [
        "refresh"
      ],
      "type": "object",
      "properties": {
        "refresh": {
          "title": "Refresh",
          "type": "string",
          "minLength": 1
        },
        "access": {
          "title": "Access",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "RegisterUser": {
      "required": [
        "phone_number",
        "password"
      ],
      "type": "object",
      "properties": {
        "image": {
          "title": "Фото",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "full_name": {
          "title": "Полное имя",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "region": {
          "title": "Регион",
          "type": "integer",
          "x-nullable": true
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string",
          "minLength": 1
        },
        "email": {
          "title": "Эл. адрес",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "password": {
          "title": "Password",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VerificationRegistrationCode": {
      "required": [
        "phone",
        "code",
        "session"
      ],
      "type": "object",
      "properties": {
        "phone": {
          "title": "Phone",
          "type": "string",
          "pattern": "^\\+?1?\\d{9,12}$",
          "minLength": 1
        },
        "code": {
          "title": "Code",
          "type": "string",
          "minLength": 1
        },
        "session": {
          "title": "Session",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserSearch": {
      "required": [
        "search_text"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "search_text": {
          "title": "Поисковый запрос",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "SocialAuthLogin": {
      "type": "object",
      "properties": {
        "access_token": {
          "title": "Access token",
          "type": "string"
        },
        "code": {
          "title": "Code",
          "type": "string"
        }
      }
    },
    "UserWishlist": {
      "required": [
        "announcement"
      ],
      "type": "object",
      "properties": {
        "announcement": {
          "title": "Announcement",
          "type": "integer"
        }
      }
    },
    "UserProfileWishlist": {
      "required": [
        "make",
        "model",
        "generation",
        "body_type",
        "drive_type",
        "engine_type",
        "gearbox_type",
        "modification_type",
        "region",
        "district",
        "user",
        "dealer",
        "licence_type",
        "ownership",
        "contact_name",
        "contact_phone",
        "registered_in_uzbekistan",
        "user_type",
        "price",
        "gallery",
        "published_at",
        "discount"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "make": {
          "$ref": "#/definitions/Make"
        },
        "model": {
          "$ref": "#/definitions/Model"
        },
        "generation": {
          "$ref": "#/definitions/Generation"
        },
        "body_type": {
          "$ref": "#/definitions/BodyType"
        },
        "drive_type": {
          "$ref": "#/definitions/DriveType"
        },
        "engine_type": {
          "$ref": "#/definitions/EngineType"
        },
        "gearbox_type": {
          "$ref": "#/definitions/GearboxType"
        },
        "year": {
          "title": "Год выпуска",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "modification_type": {
          "$ref": "#/definitions/ModificationType"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "district": {
          "$ref": "#/definitions/District"
        },
        "user": {
          "$ref": "#/definitions/UserMini"
        },
        "dealer": {
          "$ref": "#/definitions/DealerMini"
        },
        "licence_type": {
          "title": "Тип лицензии",
          "type": "string",
          "enum": [
            "original",
            "duplicate"
          ]
        },
        "ownership": {
          "title": "Владение",
          "type": "string",
          "enum": [
            "first",
            "second",
            "third",
            "other"
          ]
        },
        "description": {
          "title": "Описание",
          "type": "string",
          "x-nullable": true
        },
        "is_registered_locally": {
          "title": "Не растаможен",
          "type": "boolean"
        },
        "contact_name": {
          "title": "Контактное лицо",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "contact_email": {
          "title": "Контактный email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "contact_phone": {
          "title": "Контактный телефон",
          "type": "string",
          "maxLength": 125,
          "minLength": 1
        },
        "longitude": {
          "title": "Долгота",
          "type": "number",
          "x-nullable": true
        },
        "latitude": {
          "title": "Широта",
          "type": "number",
          "x-nullable": true
        },
        "distance_traveled": {
          "title": "Пробег",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "registered_in_uzbekistan": {
          "title": "Регистрирован в узбекистане",
          "type": "boolean"
        },
        "user_type": {
          "title": "Тип пользователя",
          "type": "string",
          "enum": [
            "owner",
            "dealer"
          ]
        },
        "is_new": {
          "title": "Новый",
          "type": "boolean"
        },
        "price": {
          "title": "Price",
          "type": "number"
        },
        "currency": {
          "title": "Валюта",
          "type": "string",
          "enum": [
            "uzs",
            "usd",
            "euro"
          ]
        },
        "gallery": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "published_at": {
          "title": "Published at",
          "type": "string",
          "minLength": 1
        },
        "views_count": {
          "title": "Количество просмотров",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "is_comparison": {
          "title": "Is comparison",
          "type": "string",
          "readOnly": true
        },
        "discount": {
          "title": "Discount",
          "type": "number"
        },
        "contact_available_from": {
          "title": "Контакт доступен с",
          "type": "string",
          "x-nullable": true
        },
        "contact_available_to": {
          "title": "Контакт доступен до",
          "type": "string",
          "x-nullable": true
        },
        "is_rent_with_purchase": {
          "title": "Аренда с выкупом",
          "type": "boolean"
        },
        "is_wishlisted": {
          "title": "Is wishlisted",
          "type": "string",
          "readOnly": true
        }
      }
    }
  }
}