{
  "paths": {
    "/car-place/category/list/": {
      "get": {
        "operationId": "car-place_category_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "region",
            "in": "query",
            "description": "Comma-separated list of region IDs",
            "required": false,
            "type": "string",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarPlaceCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": []
    },
    "/car-place/list/": {
      "get": {
        "operationId": "car-place_list_list",
        "description": "",
        "parameters": [
          {
            "name": "region__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "category__id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarPlaceList"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": []
    },
    "/car-place/map/": {
      "get": {
        "operationId": "car-place_map_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "lon",
            "in": "query",
            "description": "Longitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "rad",
            "in": "query",
            "description": "Radius (kilometers)",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarPlace"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": []
    },
    "/car-place/{slug}/": {
      "get": {
        "operationId": "car-place_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarPlace"
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$"
        }
      ]
    },
    "/car-place/{slug}/product/category/list/": {
      "get": {
        "operationId": "car-place_product_category_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProductCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car-place/{slug}/product/list/": {
      "get": {
        "operationId": "car-place_product_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car-place/{slug}/{category_id}/list/": {
      "get": {
        "operationId": "car-place_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car-place"
        ]
      },
      "parameters": [
        {
          "name": "category_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/announcement-counter/": {
      "get": {
        "operationId": "car_announcement-counter_list",
        "description": "",
        "parameters": [
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "moderation_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_rent_with_purchase",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "price_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnouncementFilterCounter"
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/call/": {
      "post": {
        "operationId": "car_announcement_call_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCall"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCall"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/compare/": {
      "get": {
        "operationId": "car_announcement_compare_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "announcements",
            "in": "query",
            "type": "str"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnouncementCompare"
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/create/": {
      "post": {
        "operationId": "car_announcement_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/deal-of-day/": {
      "get": {
        "operationId": "car_announcement_deal-of-day_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementOfDay"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/list/": {
      "get": {
        "operationId": "car_announcement_list_list",
        "description": "",
        "parameters": [
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "moderation_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_rent_with_purchase",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "price_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_from",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "year_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "currency",
            "in": "query",
            "type": "str"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/owner-detail/": {
      "post": {
        "operationId": "car_announcement_owner-detail_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementOwnerDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementOwnerDetail"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/owner/{id}/": {
      "get": {
        "operationId": "car_announcement_owner_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcement/photo-instruction/": {
      "get": {
        "operationId": "car_announcement_photo-instruction_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnnouncementAddingPhotoInstructions"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/sms-verification/entrypoint/": {
      "post": {
        "operationId": "car_announcement_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForAnnouncement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForAnnouncement"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/sms-verification/verify": {
      "post": {
        "operationId": "car_announcement_sms-verification_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerifyCodeForAnnouncement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerifyCodeForAnnouncement"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/verify-owner/create/": {
      "post": {
        "operationId": "car_announcement_verify-owner_create_create",
        "description": "",
        "parameters": [
          {
            "name": "announcement",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "technical_passport_front",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "technical_passport_back",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "driver_license_front",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "driver_license_back",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "additional_info",
            "in": "formData",
            "required": false,
            "type": "string",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementVerifyOwnerCreate"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/announcement/verify-owner/{id}/delete/": {
      "delete": {
        "operationId": "car_announcement_verify-owner_delete_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Подтверждение владельца.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcement/{id}/detail/": {
      "get": {
        "operationId": "car_announcement_detail_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementDetail"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcement/{id}/sold/": {
      "post": {
        "operationId": "car_announcement_sold_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/announcement/{id}/update/": {
      "put": {
        "operationId": "car_announcement_update_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "patch": {
        "operationId": "car_announcement_update_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementCreate"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/car/announcements-min-max-price-year/": {
      "get": {
        "operationId": "car_announcements-min-max-price-year_list",
        "description": "",
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "type": "str"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/body-types/": {
      "get": {
        "operationId": "car_body-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BodyType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/comparison/": {
      "get": {
        "operationId": "car_comparison_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserComparisonCreateList"
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "post": {
        "operationId": "car_comparison_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserComparisonCreateList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserComparisonCreateList"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/comparison/{announcement_id}/delete-announcement/": {
      "delete": {
        "operationId": "car_comparison_delete-announcement_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "announcement_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/drive-types/": {
      "get": {
        "operationId": "car_drive-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DriveType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/equipments/list/": {
      "get": {
        "operationId": "car_equipments_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Equipment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/equipments/options/list/": {
      "get": {
        "operationId": "car_equipments_options_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OptionListByCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/equipments/options/{equipment_id}/": {
      "get": {
        "operationId": "car_equipments_options_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EquipmentOption"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "equipment_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/equipments/{model_id}/": {
      "get": {
        "operationId": "car_equipments_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Equipment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "model_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/gas-equipments/": {
      "get": {
        "operationId": "car_gas-equipments_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GasEquipment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/gearbox-types/": {
      "get": {
        "operationId": "car_gearbox-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GearboxType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/makes/": {
      "get": {
        "operationId": "car_makes_list",
        "description": "",
        "parameters": [
          {
            "name": "is_popular",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Make"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/makes/top/": {
      "get": {
        "operationId": "car_makes_top_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Make"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/min-car-price/": {
      "post": {
        "operationId": "car_min-car-price_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementMinCarPrice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AnnouncementMinCarPrice"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/my-announcements/": {
      "get": {
        "operationId": "car_my-announcements_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MyAnnouncement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/price-statistics/": {
      "get": {
        "operationId": "car_price-statistics_list",
        "description": "",
        "parameters": [
          {
            "name": "generation",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/top-announcements/": {
      "get": {
        "operationId": "car_top-announcements_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Announcement"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": []
    },
    "/car/{genaration_id}/{body_type_id}/engine_type/": {
      "get": {
        "operationId": "car_engine_type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EngineType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "genaration_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/body-types/": {
      "get": {
        "operationId": "car_body-types_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BodyType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/{body_type_id}/{engine_type_id}/drive_type/": {
      "get": {
        "operationId": "car_drive_type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DriveType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "engine_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/{body_type_id}/{engine_type_id}/{drive_type_id}/gearbox_type/": {
      "get": {
        "operationId": "car_gearbox_type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GearboxType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "drive_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "engine_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{generation_id}/{body_type_id}/{engine_type_id}/{drive_type_id}/{gearbox_type_id}/modification-type/": {
      "get": {
        "operationId": "car_modification-type_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ModificationType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "body_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "drive_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "engine_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "gearbox_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generation_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{make_id}/models/": {
      "get": {
        "operationId": "car_models_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Model"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "make_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{model_id}/years/": {
      "get": {
        "operationId": "car_years_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "model_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/car/{model_id}/{year}generations/": {
      "get": {
        "operationId": "car_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Generation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "car"
        ]
      },
      "parameters": [
        {
          "name": "model_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "year",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/common/colors/": {
      "get": {
        "operationId": "common_colors_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Color"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/districts/{region_id}": {
      "get": {
        "operationId": "common_districts_read",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DistrictRegion"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": [
        {
          "name": "region_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/common/map/screenshot": {
      "post": {
        "operationId": "common_map_screenshot_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapScreenshot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MapScreenshot"
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/regions/": {
      "get": {
        "operationId": "common_regions_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Region"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/static-pages/": {
      "get": {
        "operationId": "common_static-pages_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StaticPage"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/common/static-pages/{slug}/": {
      "get": {
        "operationId": "common_static-pages_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StaticPage"
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/common/used-social-auths/": {
      "get": {
        "operationId": "common_used-social-auths_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProjectSocialAuths"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "common"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_list",
        "description": "",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field from to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_multi_match",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/functional_suggest/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_functional_suggest",
        "summary": "Functional suggest functionality.",
        "description": ":param request:\n:return:",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field from to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_multi_match",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/suggest/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_suggest",
        "description": "Suggest functionality.",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "car_year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field from to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search_multi_match",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search in car_make.name, car_model.name, car_generation.name, car_body_type.type, dealer.name, absolute_car_name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/es/AnnouncementElasticSearch/{id}/": {
      "get": {
        "operationId": "es_AnnouncementElasticSearch_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions//home/avtouz/web/auto-backend/src/es/announcements/serializers.py.AnnouncementSerializer"
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/es/suggest/": {
      "get": {
        "operationId": "es_suggest_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnouncementSuggestTypesense"
              }
            }
          }
        },
        "tags": [
          "es"
        ]
      },
      "parameters": []
    },
    "/payment/create-announcement-order/": {
      "post": {
        "operationId": "payment_create-announcement-order_create",
        "description": "",
        "parameters": [
          {
            "name": "announcement",
            "in": "formData",
            "required": false,
            "type": "integer",
            "x-nullable": true
          },
          {
            "name": "provider",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "payme"
            ]
          },
          {
            "name": "redirect_url",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "tariff_type",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "seven_days",
              "fifteen_days",
              "thirty_days",
              "top_three_days",
              "top_seven_days",
              "top_ten_days",
              "vip_three_days",
              "vip_seven_days",
              "vip_ten_days",
              "hot"
            ]
          },
          {
            "name": "reels_file",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAnnouncementOrder"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "payment"
        ]
      },
      "parameters": []
    },
    "/payment/last-transaction-status/{order_id}": {
      "get": {
        "operationId": "payment_last-transaction-status_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetLastTransactionStatus"
            }
          }
        },
        "tags": [
          "payment"
        ]
      },
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/payment/payme-call-back/": {
      "post": {
        "operationId": "payment_payme-call-back_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payme"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Payme"
            }
          }
        },
        "tags": [
          "payment"
        ]
      },
      "parameters": []
    },
    "/payment/tariff/": {
      "get": {
        "operationId": "payment_tariff_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tariff"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "payment"
        ]
      },
      "parameters": []
    },
    "/reels/": {
      "get": {
        "operationId": "reels_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListReels"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/like/": {
      "post": {
        "operationId": "reels_like_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LikeReels"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LikeReels"
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/offer-of-the-day/": {
      "get": {
        "operationId": "reels_offer-of-the-day_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListReels"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/share/": {
      "post": {
        "operationId": "reels_share_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShareReels"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShareReels"
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": []
    },
    "/reels/{id}/": {
      "get": {
        "operationId": "reels_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailReels"
            }
          }
        },
        "tags": [
          "reels"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Рельс.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/rent/additional-service/": {
      "get": {
        "operationId": "rent_additional-service_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdditionalService"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/list/": {
      "get": {
        "operationId": "rent_list_list",
        "description": "",
        "parameters": [
          {
            "name": "rent_car__type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__category",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__has_air_conditioner",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__has_baby_seat",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__is_clean",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__is_full_fuel",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_car__body_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__drive_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__gearbox_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__engine_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rent_car__color",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_car_year_start",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_car_year_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_price_start",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "rent_price_end",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Rent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/main_page/{rent_car_type_id}/": {
      "get": {
        "operationId": "rent_main_page_read",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rent_car__has_air_conditioner",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car__has_baby_seat",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car__is_clean",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car__is_full_fuel",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "region__in",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__make",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__body_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__drive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car__gearbox_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_car_year_start",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_car_year_end",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "rent_price_start",
            "in": "query",
            "type": "string"
          },
          {
            "name": "rent_price_end",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentCarMainPage"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": [
        {
          "name": "rent_car_type_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/rent/order/": {
      "post": {
        "operationId": "rent_order_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RentOrderPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RentOrderPost"
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/order/list": {
      "get": {
        "operationId": "rent_order_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentOrderGet"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/type/": {
      "get": {
        "operationId": "rent_type_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentCarType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": []
    },
    "/rent/type/{id}/categories/": {
      "get": {
        "operationId": "rent_type_categories_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RentCarCategory"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Категория автомобиля.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/rent/{id}/": {
      "get": {
        "operationId": "rent_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rent"
            }
          }
        },
        "tags": [
          "rent"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Аренда.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/review/comments/{id}/": {
      "put": {
        "operationId": "review_comments_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "patch": {
        "operationId": "review_comments_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "delete": {
        "operationId": "review_comments_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Комментарий.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/review/create/": {
      "post": {
        "operationId": "review_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": []
    },
    "/review/list/": {
      "get": {
        "operationId": "review_list_list",
        "description": "",
        "parameters": [
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarReview"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": []
    },
    "/review/my-reviews/": {
      "get": {
        "operationId": "review_my-reviews_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarReview"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": []
    },
    "/review/{id}/": {
      "put": {
        "operationId": "review_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "patch": {
        "operationId": "review_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "delete": {
        "operationId": "review_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Отзыв.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/review/{id}/comments/": {
      "get": {
        "operationId": "review_comments_list",
        "description": "",
        "parameters": [
          {
            "name": "reply_to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CarReviewComment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/review/{id}/comments/create/": {
      "post": {
        "operationId": "review_comments_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReviewCommentCreateUpdate"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/review/{id}/detail/": {
      "get": {
        "operationId": "review_detail_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CarReview"
            }
          }
        },
        "tags": [
          "review"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Отзыв.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/stories/": {
      "get": {
        "operationId": "stories_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Category"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "stories"
        ]
      },
      "parameters": []
    },
    "/stories/item/{id}/read/": {
      "get": {
        "operationId": "stories_item_read_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "stories"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this История.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/change-password/": {
      "post": {
        "operationId": "users_change-password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change-phone/": {
      "post": {
        "operationId": "users_change-phone_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserChangePhone"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserChangePhone"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change-phone/sms-verification/entrypoint/": {
      "post": {
        "operationId": "users_change-phone_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForChangePhone"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeForChangePhone"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/dealers-map/": {
      "get": {
        "operationId": "users_dealers-map_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "lon",
            "in": "query",
            "description": "Longitude",
            "required": true,
            "type": "number"
          },
          {
            "name": "rad",
            "in": "query",
            "description": "Radius (kilometers)",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Dealer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/dealers/": {
      "get": {
        "operationId": "users_dealers_list",
        "description": "",
        "parameters": [
          {
            "name": "car_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mark",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Dealer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/dealers/watch-contact/{id}/": {
      "post": {
        "operationId": "users_dealers_watch-contact_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/dealers/{dealer}/mark/{mark}/cars/": {
      "get": {
        "operationId": "users_dealers_mark_cars_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerCars"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "dealer",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "mark",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/dealers/{slug}/": {
      "get": {
        "operationId": "users_dealers_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dealer"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$"
        }
      ]
    },
    "/users/dealers/{slug}/cars/": {
      "get": {
        "operationId": "users_dealers_cars_list",
        "description": "",
        "parameters": [
          {
            "name": "is_new",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "make",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerCars"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/dealers/{slug}/marks/": {
      "get": {
        "operationId": "users_dealers_marks_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerMarks"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/users/detail-with-counts/": {
      "get": {
        "operationId": "users_detail-with-counts_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetailWithCounts"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/detail/": {
      "get": {
        "operationId": "users_detail_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetail"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/detail/edit/": {
      "put": {
        "operationId": "users_detail_edit_update",
        "description": "",
        "parameters": [
          {
            "name": "full_name",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "image",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "integer",
            "x-nullable": true
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetailEdit"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_detail_edit_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "full_name",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "image",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "integer",
            "x-nullable": true
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDetailEdit"
            }
          }
        },
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/filter-history/create/": {
      "post": {
        "operationId": "users_filter-history_create_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFilterHistoryCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserFilterHistoryCreate"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/filter-history/delete/": {
      "delete": {
        "operationId": "users_filter-history_delete_delete",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserFilterHistoryDelete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/filter-history/list/": {
      "get": {
        "operationId": "users_filter-history_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserFilterHistoryList"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/forget-pass/change-password/": {
      "post": {
        "operationId": "users_forget-pass_change-password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeForgetPass"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeForgetPass"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/forget-pass/sms-verification/entrypoint/": {
      "post": {
        "operationId": "users_forget-pass_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/forget-pass/sms-verification/verify/": {
      "post": {
        "operationId": "users_forget-pass_sms-verification_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationForgetPass"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerificationForgetPass"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/login/": {
      "post": {
        "operationId": "users_login_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/notification/list/": {
      "get": {
        "operationId": "users_notification_list_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserNotification"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/notification/read-all/": {
      "post": {
        "operationId": "users_notification_read-all_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/notification/{id}/": {
      "get": {
        "operationId": "users_notification_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserNotification"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Получатель уведомления.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/popular-searches/": {
      "get": {
        "operationId": "users_popular-searches_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PopularSearch"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/profile/short/": {
      "get": {
        "operationId": "users_profile_short_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserShortInfo"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/refresh/token/": {
      "post": {
        "operationId": "users_refresh_token_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/registration/": {
      "post": {
        "operationId": "users_registration_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/registration/sms-verification/entrypoint/": {
      "post": {
        "operationId": "users_registration_sms-verification_entrypoint_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendVerificationCode"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/registration/sms-verification/verify/": {
      "post": {
        "operationId": "users_registration_sms-verification_verify_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationRegistrationCode"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VerificationRegistrationCode"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/searches/": {
      "get": {
        "operationId": "users_searches_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserSearch"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/social-auth/login/apple/": {
      "post": {
        "operationId": "users_social-auth_login_apple_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/social-auth/login/facebook/": {
      "post": {
        "operationId": "users_social-auth_login_facebook_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/social-auth/login/google/": {
      "post": {
        "operationId": "users_social-auth_login_google_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SocialAuthLogin"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/wishlist/announcement/add/": {
      "post": {
        "operationId": "users_wishlist_announcement_add_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/wishlist/announcement/list/": {
      "get": {
        "operationId": "users_wishlist_announcement_list_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserProfileWishlist"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/wishlist/announcement/remove/": {
      "post": {
        "operationId": "users_wishlist_announcement_remove_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWishlist"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/{id}/cars/": {
      "get": {
        "operationId": "users_cars_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DealerCars"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Объявление.",
          "required": true,
          "type": "integer"
        }
      ]
    }
  }
}